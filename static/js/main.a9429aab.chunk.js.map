{"version":3,"sources":["assets/loading.svg","assets/logo.png","components/Welcome.js","components/Loading.js","components/Quote.js","components/Home.js","components/About.js","components/NotFound.js","components/Navbar.js","components/Footer.js","App/index.js","App/serviceWorker.js","index.js"],"names":["module","exports","Welcome","className","index","style","margin","height","src","loadingSvg","alt","Quote","props","quote","Home","content","loading","welcome","About","fontSize","maxWidth","textAlign","lineHeight","target","rel","href","Fragment","marginLeft","marginTop","Navbar","id","to","logo","onClick","onGenerate","Footer","app","state","this","timout1","setTimeout","timout2","setState","getQuote","clearTimeout","basename","bind","exact","path","fetch","header","method","then","res","console","log","json","catch","err","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9429aab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.d8f8be86.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f3c971f0.png\";","import React from 'react'\r\n\r\nexport default function Welcome() {\r\n    return (\r\n            <span className=\"center\">\r\n                Welcome!\r\n            </span>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport loadingSvg from '../assets/loading.svg'\r\n\r\nexport default function index() {\r\n    let iconStyle = {\r\n        // position: 'absolute',\r\n        margin: '20px auto',\r\n        // left: 0,\r\n        // right: 0,\r\n        // bottom: 0,\r\n        height: '100px'\r\n    }\r\n    return (\r\n        <div className=\"center\">\r\n            <span>\r\n                We are looking for a quote...\r\n            </span>\r\n            <br />\r\n            <img className=\"fadeIn\" style={iconStyle} src={loadingSvg} alt=\"loading\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Quote(props) {\r\n    return (\r\n        <div className=\"center quote\">\r\n            <span>\r\n                {props.quote}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Welcome from './Welcome';\r\nimport Loading from './Loading';\r\nimport Quote from './Quote';\r\n\r\n\r\nexport default function Home(props) {\r\n    let content = <Welcome />;\r\n    content = props.loading || props.quote == null ? <Loading /> : <Quote quote={props.quote} />;\r\n    content = props.welcome ? <Welcome /> : content;\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <span>about</span>\r\n            <p style={{ fontSize: \"1.2em\", margin: \"20px auto\", maxWidth: \"90%\", textAlign: \"left\", lineHeight: \"1.7em\" }}>\r\n                Welcome to Quotify, <br />\r\n                Quotify is a client side application to diplay random tech quotes supplied by this<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://quotes.stormconsultancy.co.uk/random.json\"> public api</a><br />\r\n                This was made by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/afaithraf\">Ashraf</a><br />\r\n                <br />\r\n                    Feel free to use <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/afaithraf/quotify\">Source code</a> \r\n                <br />\r\n                MIT License | Copyright (c) 2019 Ashraf<br />\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function index() {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"center\" style={{ fontSize: \"80px\", marginLeft:\"-50px\", marginTop:\"-40px\" }}>\r\n            üòê 404 \r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport logo from '../assets/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <div className=\"content\">\r\n                <Link className=\"logo\" to=\"/\">\r\n                    <img src={logo} height=\"36px\" alt=\"Quotify logo\" />\r\n                </Link>\r\n                <div className=\"searchBar\">\r\n                    <Link to=\"/\">\r\n                        <button onClick={props.onGenerate}>Generate</button>\r\n                    </Link>\r\n                    {/* <input type=\"text\" placeholder=\"type a topic here\" /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"footer\">\r\n            <nav className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/404\">404</Link>\r\n                <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"https://github.com/afaithraf/Quotify\">Github</a>\r\n            </nav>\r\n            <div className=\"info\">\r\n                made by <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"https://github.com/afaithraf\">Ashraf</a> | Quotify 2020\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport HomePage from '../components/Home';\r\nimport AboutPage from '../components/About';\r\nimport NotFoundPage from '../components/NotFound';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default class app extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quote: null,\r\n            loading: false,\r\n            welcome: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.timout1 = setTimeout(() => {\r\n            this.timout2 = this.setState({ welcome: false, loading: true });\r\n            setTimeout(() => {\r\n                this.setState({ welcome: false, loading: (this.state.quote == null ? true : false) });\r\n            }, 1600);\r\n        }, 1600);\r\n        this.getQuote();\r\n    }\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timout1);\r\n        clearTimeout(this.timout2);\r\n    }\r\n    render() {\r\n        return (\r\n             <Router basename={'quotify'}>{/*change basename to match subdirectory or remove*/}\r\n                <Navbar onGenerate={this.getQuote.bind(this)} />\r\n                <div id='stars'></div>\r\n                <div id='stars2'></div>\r\n                <div id='stars3'></div>\r\n                <div id='title'>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <HomePage quote={this.state.quote} loading={this.state.loading} welcome={this.state.welcome} />\r\n                        </Route>\r\n                        <Route path=\"/about\">\r\n                            <AboutPage />\r\n                        </Route>\r\n                        <Route>\r\n                            <NotFoundPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <Footer />\r\n            </Router>\r\n        )\r\n    }\r\n    getQuote() {\r\n        this.setState({ quote: null, loading: true })\r\n\r\n        let endpoint = 'https://cors-anywhere.herokuapp.com/http://quotes.stormconsultancy.co.uk/random.json'; //to prevent CORS problems\r\n        let apiKey = '9a916a23d7dceb5c5019cb24cc324551b483fc78';\r\n        let reqPar = {\r\n            header: {\r\n                'Authorization': 'Token ' + apiKey\r\n            },\r\n            method: 'GET'\r\n        };\r\n        fetch(endpoint, reqPar)\r\n            .then(res => {\r\n                console.log(res);\r\n                return res.json()\r\n            })\r\n            .then((res) => {\r\n                console.log(res)\r\n                this.setState({ quote: res.quote, loading: false })\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles.scss';\r\nimport App from './App/index';\r\nimport * as serviceWorker from './App/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}