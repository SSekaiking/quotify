{"version":3,"sources":["assets/loading.svg","assets/logo.png","components/Welcome.js","components/Loading.js","components/Quote.js","components/Home.js","components/About.js","components/NotFound.js","components/Navbar.js","components/Footer.js","App/index.js","App/serviceWorker.js","index.js"],"names":["module","exports","Welcome","className","index","style","margin","height","src","loadingSvg","alt","Quote","props","quote","Home","content","loading","welcome","About","fontSize","maxWidth","Fragment","marginLeft","marginTop","Navbar","id","logo","onClick","onGenerate","Footer","to","href","app","state","this","timout1","setTimeout","timout2","setState","getQuote","clearTimeout","bind","exact","path","fetch","header","method","then","res","console","log","json","catch","err","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b531d750.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.27e2ef14.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f3c971f0.png\";","import React from 'react'\r\n\r\nexport default function Welcome() {\r\n    return (\r\n            <span className=\"center\">\r\n                Welcome!\r\n            </span>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport loadingSvg from '../assets/loading.svg'\r\n\r\nexport default function index() {\r\n    let iconStyle = {\r\n        // position: 'absolute',\r\n        margin: '20px auto',\r\n        // left: 0,\r\n        // right: 0,\r\n        // bottom: 0,\r\n        height: '100px'\r\n    }\r\n    return (\r\n        <div className=\"center\">\r\n            <span>\r\n                We are looking for a quote...\r\n            </span>\r\n            <br />\r\n            <img className=\"fadeIn\" style={iconStyle} src={loadingSvg} alt=\"loading\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Quote(props) {\r\n    return (\r\n        <div className=\"center quote\">\r\n            <span>\r\n                {props.quote}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Welcome from './Welcome';\r\nimport Loading from './Loading';\r\nimport Quote from './Quote';\r\n\r\n\r\nexport default function Home(props) {\r\n    let content = <Welcome />;\r\n    content = props.loading || props.quote == null ? <Loading /> : <Quote quote={props.quote} />;\r\n    content = props.welcome ? <Welcome /> : content;\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <span>about</span>\r\n            <p style={{fontSize:\"1.2em\", margin:\"20px auto\", maxWidth:\"90%\"}}>\r\n                After his hometown is destroyed and his mother is killed, young Eren Yeager vows to cleanse the earth of the giant humanoid Titans that have brought humanity to the brink of extinction.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function index() {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"center\" style={{ fontSize: \"80px\", marginLeft:\"-50px\", marginTop:\"-40px\" }}>\r\n            üòê 404 \r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport logo from '../assets/logo.png';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div id=\"navbar\">\r\n            <div className=\"content\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} height=\"36px\" alt=\"Quotify logo\" />\r\n                </div>\r\n                <div className=\"searchBar\">\r\n                    <button onClick={props.onGenerate}>Generate</button>\r\n                    {/* <input type=\"text\" placeholder=\"type a topic here\" /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"footer\">\r\n            <nav className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/404\">404</Link>\r\n                <a href=\"https://github.com/afaithraf/Quotify\">Github</a>\r\n            </nav>\r\n            <div className=\"info\">\r\n                made by <a href=\"https://github.com/afaithraf\">Ashraf</a> | Quotify 2020\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport HomePage from '../components/Home';\r\nimport AboutPage from '../components/About';\r\nimport NotFoundPage from '../components/NotFound';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default class app extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quote: null,\r\n            loading: false,\r\n            welcome: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.timout1 = setTimeout(() => {\r\n            this.timout2 = this.setState({ welcome: false, loading: true });\r\n            setTimeout(() => {\r\n                this.setState({ welcome: false, loading: (this.state.quote == null ? true : false) });\r\n            }, 1600);\r\n        }, 1600);\r\n        this.getQuote();\r\n    }\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timout1);\r\n        clearTimeout(this.timout2);\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar onGenerate={this.getQuote.bind(this)} />\r\n                <div id='stars'></div>\r\n                <div id='stars2'></div>\r\n                <div id='stars3'></div>\r\n                <div id='title'>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <HomePage quote={this.state.quote} loading={this.state.loading} welcome={this.state.welcome} />\r\n                        </Route>\r\n                        <Route path=\"/about\">\r\n                            <AboutPage />\r\n                        </Route>\r\n                        <Route>\r\n                            <NotFoundPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <Footer />\r\n            </Router>\r\n        )\r\n    }\r\n    getQuote() {\r\n        this.setState({ quote: null, loading: true })\r\n\r\n        let endpoint = 'https://cors-anywhere.herokuapp.com/http://quotes.stormconsultancy.co.uk/random.json'; //to prevent CORS problems\r\n        let apiKey = '9a916a23d7dceb5c5019cb24cc324551b483fc78';\r\n        let reqPar = {\r\n            header: {\r\n                'Authorization': 'Token ' + apiKey\r\n            },\r\n            method: 'GET'\r\n        };\r\n        fetch(endpoint, reqPar)\r\n            .then(res => {\r\n                console.log(res);\r\n                return res.json()\r\n            })\r\n            .then((res) => {\r\n                console.log(res)\r\n                this.setState({ quote: res.quote, loading: false })\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles.scss';\nimport App from './App/index';\nimport * as serviceWorker from './App/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}